#include <bits/stdc++.h>
using namespace std;
typedef pair<int, int> ii; 
typedef pair<ii ,ii> iii;
int main() {
    vector<int>num(3),m(3);
    vector<iii>v;
    for(int i=0;i<3;i++){cin>>num[i];}
   for(int i=0;i<3;i++){cin>>m[i];}
    for(int i=0;i<3;i++)
    {
        int x,y;
        cin>>x>>y;
        iii A=make_pair(ii(num[i],m[i]),ii(x,y));
       v.push_back(A);
    }
    int n;
    cin>>n;;
    sort(v.begin(),v.end());
   for(int i=0;i<3;i++)
   {
     cout<<v[i].first.first<<" "<<" "<<v[i].first.second<<" "<<v[i].second.first<<" "<<v[i].second.second<<"\n";
   }
   long int cost=0,i;
    for(int i=0;i<3;i++){
    cost+=v[i].first.first*v[i].second.first*v[i].second.second;
    v[i].first.second-=v[i].second.first*v[i].second.second;
    n=n-v[i].second.first*v[i].second.second;}
    cout<<cost<<"\n";
    cout<<n<<"\n";
   if(v[0].first.second>=n)
   {
       cost+=(n*v[0].first.first);
       n=0;
   }
   else 
   {
       cost+=(v[0].first.second*v[0].first.first);
       n=n-v[0].first.second;
   }
    if(v[1].first.second>=n)
   {
       cost+=(n*v[1].first.first);
       n=0;
   }
   else
   {
       cost+=(v[1].first.second*v[1].first.first);
       n=n-v[1].first.second;
   }
   if(v[2].first.second>=n)
   {
       cost+=(n*v[2].first.first);
       n=0;
   }
   else
   {
       cost+=(v[2].first.second*v[2].first.first);
       n=n-v[2].first.second;
   }
   cout<<cost;
   
    
        



    
}